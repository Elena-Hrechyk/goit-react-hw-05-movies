{"version":3,"file":"static/js/652.93fd2bd3.chunk.js","mappings":"uWAGaA,EAAYC,EAAAA,GAAAA,GAAH,iJASTC,EAAWD,EAAAA,GAAAA,GAAH,2MASRE,EAAUF,EAAAA,GAAAA,IAAH,6KAUPG,EAAWH,EAAAA,GAAAA,EAAH,wGAORI,EAAWJ,EAAAA,GAAAA,EAAH,kF,SC4BrB,EArDa,WACX,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,UAuBlB,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACMF,EAAUG,SACZH,EAAUG,QAAQC,QAEpBJ,EAAUG,QAAU,IAAIE,gBAJ1B,SAMIR,EAAS,MANb,UAO4BS,EAAAA,EAAAA,IAAqBR,EAASE,GAP1D,OAOUO,EAPV,OASIZ,EAASY,EAAUC,KAAKC,MAT5B,kDAWqB,oBAAb,KAAIC,MACNb,EAAS,qBAZf,2DADc,sBAkBd,OAlBe,WAAD,wBAiBdc,GACO,kBAAMX,EAAUG,QAAQC,OAAxB,CACR,GAAE,CAACN,KAGF,gCACGF,IAAS,SAACgB,EAAA,EAAD,CAAOhB,MAAOA,KACxB,SAACT,EAAD,UACGO,EAAMmB,OAAS,GACdnB,EAAMoB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAAC7B,EAAD,WACG2B,GACC,SAAC1B,EAAD,CACE6B,IAAG,6CAAwCH,GAC3CI,IAAKH,KAGP,SAAC3B,EAAD,CAAS6B,IAAKE,EAAeD,IAAKH,KAEpC,SAAC1B,EAAD,UAAW0B,KACX,SAACzB,EAAD,UAAW0B,MAVEH,EAalB,QAIV,C,qKC7DYO,EAAWlC,EAAAA,GAAAA,IAAH,6CAIRmC,EAAanC,EAAAA,GAAAA,GAAH,yFAKVoC,EAAWpC,EAAAA,GAAAA,IAAH,4F,SCRfwB,EAAQ,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACf,OACE,UAAC0B,EAAD,YACE,SAACC,EAAD,UAAa3B,KACb,SAAC4B,EAAD,CAAUL,IAAKM,EAAUL,IAAI,YAAYM,MAAM,UAGpD,EAEDd,EAAMe,UAAY,CAChB/B,MAAOgC,IAAAA,OAAAA,YAGT,O,mMCfAC,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,WAAM/B,GAAN,uFACV6B,EAAAA,EAAAA,IAAU,wBAAyB,CACrDG,OAAQhC,EAAUgC,OAClBC,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALgB,cACxBC,EADwB,yBAQvBA,EAAM5B,MARiB,2CAAH,sDAWhB6B,EAAuB,mCAAG,WAAOC,EAAOtC,GAAd,uFACjB6B,EAAAA,EAAAA,IAAU,kBAAmB,CAC/CG,OAAQhC,EAAUgC,OAClBC,OAAQ,CAAEM,MAAOD,EAAOJ,QAASJ,KAHE,cAC/BM,EAD+B,yBAK9BA,EAAM5B,MALwB,2CAAH,wDAQvBgC,EAAoB,mCAAG,WAAOzB,EAAIf,GAAX,uFACd6B,EAAAA,EAAAA,IAAA,mBAAsBd,GAAM,CAC9CiB,OAAQhC,EAAUgC,OAClBC,OAAQ,CAAEC,QAASJ,KAHa,cAC5BM,EAD4B,yBAK3BA,GAL2B,2CAAH,wDAQpB9B,EAAoB,mCAAG,WAAOS,EAAIf,GAAX,uFACd6B,EAAAA,EAAAA,IAAA,mBAAsBd,EAAtB,YAAoC,CACtDiB,OAAQhC,EAAUgC,OAClBC,OAAQ,CAAEC,QAASJ,KAHa,cAC5BM,EAD4B,yBAK3BA,GAL2B,2CAAH,wDAQpBK,EAAoB,mCAAG,WAAO1B,EAAIf,GAAX,uFACd6B,EAAAA,EAAAA,IAAA,mBAAsBd,EAAtB,YAAoC,CACtDiB,OAAQhC,EAAUgC,OAClBC,OAAQ,CAAEC,QAASJ,EAASY,KAAM,KAHF,cAC5BN,EAD4B,yBAK3BA,GAL2B,2CAAH,uD","sources":["components/Cast.styled.js","components/Cast.jsx","components/Error.styled.js","components/Error.jsx","helpers/api.js"],"sourcesContent":["import styled from 'styled-components';\n// Casts ==============================================\n\nexport const CastsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  grid-gap: 20px;\n  margin-top: 30px;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  width: 178px;\n  padding: 5px;\n  text-align: center;\n  border-radius: 4px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n`;\n\nexport const CastImg = styled.img`\n  width: 170px;\n  height: 255px;\n  object-fit: cover;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\n\nexport const CastName = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const CastRole = styled.p`\n  font-size: 16px;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieCredits } from 'helpers/api';\nimport Error from './Error';\nimport DefaultAvatar from 'img/placeholder-avatar-png.png';\nimport {\n  CastsList,\n  CastItem,\n  CastImg,\n  CastName,\n  CastRole,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    async function getMovieCasts() {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n      abortCtrl.current = new AbortController();\n      try {\n        setError(null);\n        const dataCasts = await fetchGetMovieCredits(movieId, abortCtrl);\n\n        setCasts(dataCasts.data.cast);\n      } catch (err) {\n        if (err.code !== 'ERR_BAD_REQUEST') {\n          setError('Ooops! Try again!');\n        }\n      }\n    }\n    getMovieCasts();\n    return () => abortCtrl.current.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error error={error} />}\n      <CastsList>\n        {casts.length > 0 &&\n          casts.map(({ id, profile_path, name, character }) => {\n            return (\n              <CastItem key={id}>\n                {profile_path ? (\n                  <CastImg\n                    src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  <CastImg src={DefaultAvatar} alt={name} />\n                )}\n                <CastName>{name}</CastName>\n                <CastRole>{character}</CastRole>\n              </CastItem>\n            );\n          })}\n      </CastsList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\n// ERROR ========================================\nexport const BoxError = styled.div`\n  margin-top: 50px;\n`;\n\nexport const TitleError = styled.h2`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 30px;\n`;\nexport const ImgError = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport SadRobot from 'img/sad-robot-623x416.jpg';\nimport { BoxError, TitleError, ImgError } from './Error.styled';\n\nconst Error = ({ error }) => {\n  return (\n    <BoxError>\n      <TitleError>{error}</TitleError>\n      <ImgError src={SadRobot} alt=\"Sad robot\" width=\"400\" />\n    </BoxError>\n  );\n};\n\nError.prototype = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '1fee0d3316c35113a8e2fbfdaf3cc26c';\n\nexport const fetchTrendMovies = async abortCtrl => {\n  const resps = await axios.get('/3/trending/movie/day', {\n    signal: abortCtrl.signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return resps.data;\n};\n\nexport const fetchKeywordSearchMovie = async (value, abortCtrl) => {\n  const resps = await axios.get('/3/search/movie', {\n    signal: abortCtrl.signal,\n    params: { query: value, api_key: API_KEY },\n  });\n  return resps.data;\n};\n\nexport const fetchGetMovieDetails = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY },\n  });\n  return resps;\n};\n\nexport const fetchGetMovieCredits = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}/credits`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY },\n  });\n  return resps;\n};\n\nexport const fetchGetMovieReviews = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}/reviews`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY, page: 1 },\n  });\n  return resps;\n};\n"],"names":["CastsList","styled","CastItem","CastImg","CastName","CastRole","useState","casts","setCasts","error","setError","movieId","useParams","abortCtrl","useRef","useEffect","current","abort","AbortController","fetchGetMovieCredits","dataCasts","data","cast","code","getMovieCasts","Error","length","map","id","profile_path","name","character","src","alt","DefaultAvatar","BoxError","TitleError","ImgError","SadRobot","width","prototype","PropTypes","axios","API_KEY","fetchTrendMovies","signal","params","api_key","language","resps","fetchKeywordSearchMovie","value","query","fetchGetMovieDetails","fetchGetMovieReviews","page"],"sourceRoot":""}