{"version":3,"file":"static/js/709.21c60618.chunk.js","mappings":"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","sources":["components/Error.styled.js","components/Error.jsx","components/Reviews.styled.js","components/Reviews.jsx","helpers/api.js"],"sourcesContent":["import styled from 'styled-components';\n\n// ERROR ========================================\nexport const BoxError = styled.div`\n  margin-top: 50px;\n`;\n\nexport const TitleError = styled.h2`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 30px;\n`;\nexport const ImgError = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport SadRobot from 'img/sad-robot-623x416.jpg';\nimport { BoxError, TitleError, ImgError } from './Error.styled';\n\nconst Error = ({ error }) => {\n  return (\n    <BoxError>\n      <TitleError>{error}</TitleError>\n      <ImgError src={SadRobot} alt=\"Sad robot\" width=\"400\" />\n    </BoxError>\n  );\n};\n\nError.prototype = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\n// Reviews ========================================\n\nexport const ListReviews = styled.ul`\n  padding: 0;\n`;\n\nexport const ItemReview = styled.li`\n  padding: 15px;\n  border: 2px solid lightblue;\n  border-radius: 8px;\n  transition: border 250ms linear;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  &:hover,\n  &:focus {\n    border: 2px solid darkblue;\n  }\n`;\n\nexport const Author = styled.p`\n  margin: 0;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n  line-height: 1.2;\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieReviews } from 'helpers/api';\nimport Error from './Error';\nimport { ListReviews, ItemReview, Author, Content } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n      try {\n        setError(null);\n\n        const dataReviews = await fetchGetMovieReviews(movieId, abortCtrl);\n        setReviews(dataReviews.data.results);\n      } catch (err) {\n        if (err.code !== 'ERR_BAD_REQUEST') {\n          setError('Ooops! Try again!');\n        }\n      }\n    }\n    getMovieReviews();\n    return () => abortCtrl.current.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error error={error} />}\n\n      <ListReviews>\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => {\n            return (\n              <ItemReview key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </ItemReview>\n            );\n          })\n        ) : (\n          <li>We don't have any reviews for this movie</li>\n        )}\n      </ListReviews>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '1fee0d3316c35113a8e2fbfdaf3cc26c';\n\nexport const fetchTrendMovies = async abortCtrl => {\n  const resps = await axios.get('/3/trending/movie/day', {\n    signal: abortCtrl.signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return resps.data;\n};\n\nexport const fetchKeywordSearchMovie = async (value, abortCtrl) => {\n  const resps = await axios.get('/3/search/movie', {\n    signal: abortCtrl.signal,\n    params: { query: value, api_key: API_KEY },\n  });\n  return resps.data;\n};\n\nexport const fetchGetMovieDetails = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY },\n  });\n  return resps;\n};\n\nexport const fetchGetMovieCredits = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}/credits`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY },\n  });\n  return resps;\n};\n\nexport const fetchGetMovieReviews = async (id, abortCtrl) => {\n  const resps = await axios.get(`/3/movie/${id}/reviews`, {\n    signal: abortCtrl.signal,\n    params: { api_key: API_KEY, page: 1 },\n  });\n  return resps;\n};\n"],"names":["BoxError","styled","TitleError","ImgError","Error","error","src","SadRobot","alt","width","prototype","PropTypes","ListReviews","ItemReview","Author","Content","useState","reviews","setReviews","setError","movieId","useParams","abortCtrl","useRef","useEffect","current","abort","AbortController","fetchGetMovieReviews","dataReviews","data","results","code","getMovieReviews","length","map","author","content","id","axios","API_KEY","fetchTrendMovies","signal","params","api_key","language","resps","fetchKeywordSearchMovie","value","query","fetchGetMovieDetails","fetchGetMovieCredits","page"],"sourceRoot":""}