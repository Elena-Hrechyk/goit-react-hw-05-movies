{"version":3,"file":"static/js/220.24e3f87b.chunk.js","mappings":"iPASMA,EAAY,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACtC,MAA6B,YAAtBA,EAASC,UACd,SAAC,KAAD,WACE,UAAC,KAAD,CAAWC,GAAE,UAAKL,GAAMM,MAAO,CAAEC,KAAMJ,GAAvC,UACGD,GACC,SAAC,KAAD,CACEM,IAAG,6CAAwCN,GAC3CO,IAAI,kBAGN,SAAC,KAAD,CAAgBD,IAAKE,EAAaD,IAAI,kBAExC,SAAC,KAAD,UAAmBR,QAVDD,IActB,SAAC,KAAD,WACE,UAAC,KAAD,CAAWK,GAAE,iBAAYL,GAAMM,MAAO,CAAEC,KAAMJ,GAA9C,UACGD,GACC,SAAC,KAAD,CACEM,IAAG,6CAAwCN,GAC3CO,IAAI,kBAGN,SAAC,KAAD,CAAgBD,IAAKE,EAAaD,IAAI,kBAExC,SAAC,KAAD,UAAmBR,QAVDD,EAczB,EAEDD,EAAUY,WAAa,CACrBX,GAAIY,IAAAA,OAAAA,WACJX,MAAOW,IAAAA,OAAAA,WACPV,OAAQU,IAAAA,OAAAA,WACRT,SAAUS,IAAAA,QAGZ,QC3CMC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbX,GAAWY,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGD,EAAOE,KAAI,gBAAGhB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOgB,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CACEjB,GAAIA,EACJE,OAAQe,EACRhB,MAAOA,EACPE,SAAUA,GALF,KAUjB,EAEDU,EAAUK,UAAY,CACpBJ,OAAQF,IAAAA,QACNA,IAAAA,MAAgB,CACdZ,GAAIY,IAAAA,OAAAA,WACJX,MAAOW,IAAAA,OAAAA,WACPK,YAAaL,IAAAA,OAAAA,eAInB,O","sources":["components/ItemMovie.jsx","components/ListMovie.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Placeholder from 'img/placeholder-612x612.jpg';\nimport {\n  ItemMovieSearch,\n  ImgMovieSearch,\n  LinkMovie,\n  TitleMovieSearch,\n} from 'pages/Pages.styled';\n\nconst ItemMovie = ({ id, title, poster, location }) => {\n  return location.pathname === '/movies' ? (\n    <ItemMovieSearch key={id}>\n      <LinkMovie to={`${id}`} state={{ from: location }}>\n        {poster ? (\n          <ImgMovieSearch\n            src={`https://image.tmdb.org/t/p/original${poster}`}\n            alt=\"Movie poster\"\n          />\n        ) : (\n          <ImgMovieSearch src={Placeholder} alt=\"Movie poster\" />\n        )}\n        <TitleMovieSearch>{title}</TitleMovieSearch>\n      </LinkMovie>\n    </ItemMovieSearch>\n  ) : (\n    <ItemMovieSearch key={id}>\n      <LinkMovie to={`movies/${id}`} state={{ from: location }}>\n        {poster ? (\n          <ImgMovieSearch\n            src={`https://image.tmdb.org/t/p/original${poster}`}\n            alt=\"Movie poster\"\n          />\n        ) : (\n          <ImgMovieSearch src={Placeholder} alt=\"Movie poster\" />\n        )}\n        <TitleMovieSearch>{title}</TitleMovieSearch>\n      </LinkMovie>\n    </ItemMovieSearch>\n  );\n};\n\nItemMovie.prototypev = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  location: PropTypes.object,\n};\n\nexport default ItemMovie;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport ItemMovie from './ItemMovie';\nimport { ListMovies } from 'pages/Pages.styled';\n\nconst ListMovie = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListMovies>\n      {movies.map(({ id, title, poster_path }) => (\n        <ItemMovie\n          id={id}\n          poster={poster_path}\n          title={title}\n          location={location}\n        />\n      ))}\n    </ListMovies>\n  );\n};\n\nListMovie.prototype = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ListMovie;\n"],"names":["ItemMovie","id","title","poster","location","pathname","to","state","from","src","alt","Placeholder","prototypev","PropTypes","ListMovie","movies","useLocation","map","poster_path","prototype"],"sourceRoot":""}